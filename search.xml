<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[算法图解之递归]]></title>
    <url>%2F2019%2F01%2F18%2F13%2F</url>
    <content type="text"><![CDATA[什么是递归假设你在祖母的阁楼中翻箱倒柜，发现了一个上锁的神秘手提箱。祖母告诉你，钥匙很可能在下面这个盒子里。你如何找到它： (1)检查盒子中的每样东西。(2)如果是盒子，就回到第一步。(3)如果是钥匙，就大功告成！递归只是让解决方案更清晰，并没有性能上的优势。实际上，在有些情况下，使用循环的性能更好。 递归条件每个递归函数都有两部分：基线条件 （base case）和递归条件 （recursivecase）。递归条件指的是函数调用自己，而基线条件则指的是函数不再调用自己，从而避免形成无限循环。]]></content>
      <categories>
        <category>算法图解</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法图解之选择排序]]></title>
    <url>%2F2019%2F01%2F18%2F12%2F</url>
    <content type="text"><![CDATA[实现方式每次选出最小/最大的，放到一个新数组中，接着继续寻找剩下的元素中的最小的，以此类推。 代码实现]]></content>
      <categories>
        <category>算法图解</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>选择排序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[算法图解之二分查找]]></title>
    <url>%2F2019%2F01%2F17%2F11%2F</url>
    <content type="text"><![CDATA[什么是二分查找首先我们通过以下假设来了解一下： 假设要在电话簿中找一个名字以K打头的人，（现在谁还用电话簿！）可以从头开始翻页，直到进入以K打头的部分。但你很可能不这样做，而是从中间开始，因为你知道以K打头的名字在电话簿中间。 假设你登录Facebook。当你这样做时，Facebook必须核实你是否有其网站的账户，因此必须在其数据库中查找你的用户名。如果你的用户名为karlmageddon，Facebook可从以A打头的部分开始查找，但更合乎逻辑的做法是从中间开始查找。 这是一个查找问题，在前述所有情况下，都可使用同一种算法来解决问题，这种算法就是二分查找 。二分查找是一种算法，其输入是一个有序的元素列表。如果要查找的元素包含在列表中，二分查找返回其位置；否则返回null。 工作原理下面的示例说明了二分查找的工作原理。随便想一个1～100的数字。你的目标是以最少的次数猜到这个数字。我们跳过傻找的方式，直接进入二分查找：50》25》13》7》4》2》1。不管我心里想的是哪个数字，你在7次之内都能猜到，因为每次猜测都将排除很多数字！！一般而言，对于包含n 个元素的列表，用二分查找最多需要log2n步，而简单查找最多需要n步。 代码实现下面来看看如何编写执行二分查找的Js代码： 函数binary_search接受一个有序数组和一个元素。如果指定的元素包含在数组中，这个函数将返回其位置。你将跟踪要在其中查找的数组部分——开始时为整个数组。 每次都检查中间的元素：mid = (low + high) / 2 ←—如果(low + high)不是偶数，向下取整。 如果猜的数字小了，就相应地修改low：low = mid + 1。如果猜的数字大了，就修改high：high = mid - 1。 下面是具体的实现代码：]]></content>
      <categories>
        <category>算法图解</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>二分查找</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT添加热度、阅读量排行]]></title>
    <url>%2F2019%2F01%2F12%2F10%2F</url>
    <content type="text"><![CDATA[LeanCloud注册 去LeanCloud进行注册（支持第三方登录），创建一个新应用，点击新建应用，点击存储，新建一个class，class名一定要是Counter，其他默认就好，否则会报错哦（next默认）： 添加ID和KEY 点击设置到应用Key，复制app id与app key，打开主题配置文件_config.yml，搜索leancloud_visitors，进行如下设置： 接着，打开/themes/next/languages/zh-Hans.yml，搜索visitors，将阅读次数改为当前热度即可。最后打开/themes/next/layout/_macro/post.swig，搜索leancloud-visitors-count，在其后增加如下代码： 新增热度排行页面 新建页面,首先执行：hexo n page hot新建一个hot页面，编辑其中自动生成的 index.md 文件，将其中的代码替换如下：123456789101112131415161718192021222324&lt;div id=&quot;hot&quot;&gt;&lt;/div&gt;&lt;script src=&quot;https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js&quot;&gt;&lt;/script&gt;&lt;script&gt;AV.initialize(&quot;leancloud_appid&quot;, &quot;leancloud_appkey&quot;);&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt; var time=0 var title=&quot;&quot; var url=&quot;&quot; var query = new AV.Query(&apos;Counter&apos;); query.notEqualTo(&apos;id&apos;,0); query.descending(&apos;time&apos;); query.limit(1000); query.find().then(function (todo) &#123; for (var i=0;i&lt;1000;i++)&#123; var result=todo[i].attributes; time=result.time; title=result.title; url=result.url; var content=&quot;&lt;p&gt;&quot;+&quot;&lt;font color=&apos;#1C1C1C&apos;&gt;&quot;+&quot;【文章热度:&quot;+time+&quot;℃】&quot;+&quot;&lt;/font&gt;&quot;+&quot;&lt;a href=&apos;&quot;+&quot;https://wangc1993.github.io/&quot;+url+&quot;&apos;&gt;&quot;+title+&quot;&lt;/a&gt;&quot;+&quot;&lt;/p&gt;&quot;; document.getElementById(&quot;hot&quot;).innerHTML+=content &#125; &#125;, function (error) &#123; console.log(&quot;error&quot;); &#125;);&lt;/script&gt; 并将其中的leancloud_appid、leancloud_appkey和页面地址替换为你的。 配置主题，同样打开themes\next_config.yml，搜索menu，添加hot: /hot/ || signal。 配置其中文对应，打开hexo/theme/next/languages/zh-Hans.yml，搜索menu，添加hot: 热度排行。 设置域名 回到LeanCloud后台，点击设置，到安全中心，添加安全域名，就是你博客的域名，这是为了在本地测试的时候不影响热度。大功告成！]]></content>
      <categories>
        <category>Hexo-Next配置系列</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT添加gitment评论]]></title>
    <url>%2F2019%2F01%2F11%2F9%2F</url>
    <content type="text"><![CDATA[注册OAuth Application 登录自己的github账号，注册OAuth Application 下面是我建的app。点击new OAuth app，如下进行设置： 注意： 1.要确保填入正确的 callback URL（一般是网站的域名)2.你会得到一个client ID和一个client secret，这个将被用于之后的用户登录。 配置_config.yml 搜索gitment，进行相关配置：1234567891011gitment: enable: true mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway count: true # Show comments count in post meta area lazy: false # Comments lazy loading with a button cleanly: true # Hide &apos;Powered by ...&apos; on footer, and more language: zh-Hans # Force language, or auto switch by theme github_user: wangc1993 # MUST HAVE, Your Github ID github_repo: gitment-blog # MUST HAVE, The repo you use to store Gitment comments client_id: client ID # MUST HAVE, Github client id for the Gitment client_secret: client secret # EITHER this or proxy_gateway, Github access secret token for the Gitment]]></content>
      <categories>
        <category>Hexo-Next配置系列</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT配置百度分享]]></title>
    <url>%2F2019%2F01%2F10%2F8%2F</url>
    <content type="text"><![CDATA[配置_config.yml 将主题配置_config.yml文件中关于baidushare部分的内容改为（其中type亦可以选择button，但是选择button时，死活就是没效果，不知道为什么，知道原因的评论处交流一下）：123baidushare: type: slide baidushare: true 注意： _config.yml中提示：Warning: Baidu Share does not support https.，所以当你部署到https服务器上时，会无效，本地有效。 解决方式 在当前链接下载压缩包到本地，解压后，将static文件夹保存至themes\next\source目录下。 打开文件themes\next\layout_partials\share\baidushare.swig，将//bdimg.share.baidu.com删除即可。]]></content>
      <categories>
        <category>Hexo-Next配置系列</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT加入动态背景]]></title>
    <url>%2F2019%2F01%2F10%2F7%2F</url>
    <content type="text"><![CDATA[新建文件 在themes\next\source\js\src中新建文件dynamic_bg.js，代码链接。 添加引入文件 打开themes\next\layout_layout.swig文件，在body里添加：123&lt;div class=&quot;bg_content&quot;&gt; &lt;canvas id=&quot;canvas&quot;&gt;&lt;/canvas&gt;&lt;/div&gt; 末尾继续添加代码：1&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/dynamic_bg.js&quot;&gt;&lt;/script&gt; 添加样式 在themes\next\source\css_custom\custom.styl文件末尾添加：1234567.bg_content &#123; position: fixed; top: 0; z-index: -1; width: 100%; height: 100%;&#125; 注意在next5.1.1以后，已经自带了两种背景动画，打开配置文件，搜索three_waves：将false改为true即可。]]></content>
      <categories>
        <category>Hexo-Next配置系列</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT给文章添加结束语]]></title>
    <url>%2F2019%2F01%2F10%2F6%2F</url>
    <content type="text"><![CDATA[新建end-tag 打开\themes\next\layout_macro，新建passage-end-tag.swig文件，添加如下代码：1234567&lt;div&gt; &lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-----------------------&lt;span style=&quot;margin: 0 10px;&quot;&gt;本文结束&lt;/span&gt;&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;&lt;span style=&quot;margin: 0 10px;&quot;&gt;感谢您的阅读&lt;/span&gt;-----------------------&lt;/div&gt; &#123;% endif %&#125; &lt;/div&gt;&lt;/div&gt; 修改post.swig 打开\themes\next\layout_macro\post.swig文件，在post-body后，post-footer前，添加下面内容：12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;passage-end-tag.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 修改主题配置文件 在_config.yml末尾添加：12passage_end_tag: enabled: true]]></content>
      <categories>
        <category>Hexo-Next配置系列</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT接入网页在线联系功能]]></title>
    <url>%2F2019%2F01%2F10%2F5%2F</url>
    <content type="text"><![CDATA[注册 首先在DaoVoice注册个账号，支持github、微信注册，开启DaoVoice之旅，邀请码是1e963cbc，点击创建。 修改head.swig 打开/themes/next/layout/_partials/head.swig文件，添加如下内容：123456789&#123;% if theme.daovoice %&#125; &lt;script&gt; (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;,&quot;daovoice&quot;) daovoice(&apos;init&apos;, &#123; app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot; &#125;); daovoice(&apos;update&apos;); &lt;/script&gt;&#123;% endif %&#125; 修改next配置文件 首先去daovoice后台找到自己的app_id，正常刚进入的页面就会显示，或者会提示你点击接入，只需点击接入就可看到，然后在_config.yml文件中添加内容：123# Online contactdaovoice: truedaovoice_app_id: 1e963cbc # app_id 聊天窗口配置 进入daovoice后台，点击应用设置，点击聊天设置，开始配置，下面是我的配置参数： 大功告成，欢迎开撩。]]></content>
      <categories>
        <category>Hexo-Next配置系列</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo-Next增加网页标题崩溃特效]]></title>
    <url>%2F2019%2F01%2F10%2F4%2F</url>
    <content type="text"><![CDATA[在next\source\js\src文件夹下创建crash_cheat.js，添加代码：1234567891011121314151617&lt;!--崩溃欺骗--&gt; var OriginTitle = document.title; var titleTime; document.addEventListener(&apos;visibilitychange&apos;, function () &#123; if (document.hidden) &#123; $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/img/TEP.ico&quot;); document.title = &apos;╭(°A°`)╮ 页面崩溃啦 ~&apos;; clearTimeout(titleTime); &#125; else &#123; $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/favicon.ico&quot;); document.title = &apos;(ฅ&gt;ω&lt;*ฅ) 噫又好了~&apos; + OriginTitle; titleTime = setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125; &#125;); 打开next\layout_layout.swig，在末尾添加：12&lt;!--崩溃欺骗--&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/crash_cheat.js&quot;&gt;&lt;/script&gt; 提示：如果不想改变icon可以将上面的$(&#39;[rel=&quot;icon&quot;]&#39;).attr语句删除。]]></content>
      <categories>
        <category>Hexo-Next配置系列</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo-Next页脚增加统计功能]]></title>
    <url>%2F2019%2F01%2F10%2F3%2F</url>
    <content type="text"><![CDATA[如果你使用的主题是NexT，那么你可以很方便的进行不蒜子的访客统计设置，仅仅只需要一步，打开主题的配置文件/theme/next/_config.yml，找到如下配置： 1234567891011121314151617# Show PV/UV of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzi/busuanzi_count: # count values only if the other configs are false enable: false # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; site_uv_footer: # custom pv span for the whole site site_pv: true site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; site_pv_footer: # custom pv span for one page only page_pv: true page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; page_pv_footer: 将enable的值由false改为true，便可以看到页脚出现访问量，上述配置表示： site_uv表示是否显示整个网站的UV数 site_pv表示是否显示整个网站的PV数 page_pv表示是否显示每个页面的PV数 下面是本人的配置：123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: 访客数 site_uv_footer: 人 # custom pv span for the whole site site_pv: true site_pv_header: 总访问量 site_pv_footer: 次 # custom pv span for one page only page_pv: true page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; page_pv_footer: 阅读数 注意：当我们上面的配置都在正确的时候，运行：hexo s，我们会发现footer下面根本没有数字，打开控制台发现，原来报错404。 原因分析：由于定位到是不蒜子统计功能突然有问题了，所以前往不蒜子官网进行查看，发现官网有一段很重要的提示：“因七牛强制过期『dn-lbstatics.qbox.me』域名，与客服沟通无果，只能更换域名到『busuanzi.ibruce.info』！”所以定位到问题，原来是不蒜子使用的七牛的域名被强制过期。需要把 dn-lbstatics.qbox.me 域名更换为 busuanzi.ibruce.info。 解决方案：打开文件themes\next\layout_third-party\analytics\busuanzi-counter.swig：将域名dn-lbstatics.qbox.me改为busuanzi.ibruce.info即可。 最后，我们再运行：hexo s，footer出现了统计。不过在本地预览效果的时候，uv数和pv数会过大，这是由于不蒜子用户使用一个存储空间，所以使用localhost:4000进行本地预览的时候会导致数字异常，这是正常现象，只需要将博客部署至云端即可恢复正常。]]></content>
      <categories>
        <category>Hexo-Next配置系列</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[如何使用github发布静态页面]]></title>
    <url>%2F2019%2F01%2F07%2F2%2F</url>
    <content type="text"><![CDATA[怎样在github上发布静态页面呢？方法其实很简单，利用gh-pages分支即可实现。下面我将一步步教大家如何操作（首先自己得有一个github账号和git工具）。 步骤1： 在需要发布的文件夹对应位置打开命令行： 步骤2： 初始化控制仓库：git init，这时文件中会多了一个.git文件： 步骤3： 将我们需要的文件添加到仓库中：git add --all（全部添加） 拓展：这个警告说明windows里文件的回车换行符和ninux里的不一样。git命令会将换行符统一变成ninux的换行符。 步骤4： 将需要提交的文件commit一下（仅仅提交在本地）： 步骤5： 在github上new一个仓库： 步骤6： 根据github官网，添加仓库的地址，将本地仓库里的文件push到github上的master（默认分支）中： 步骤7： 在远端（remote）创建一个新的分支（branch），固定名gh-pages，本地切换到gh-pages分支，将本地commit提交的东西push到远端的gh-pages分支上： 这样站点就创建好了。]]></content>
      <categories>
        <category>github</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[如何快速搭建免费个人博客]]></title>
    <url>%2F2019%2F01%2F04%2F1%2F</url>
    <content type="text"><![CDATA[前提准备：我们的博客网站是基于github，所以我们需要一个github账号，账号名很重要（当时很后悔）。 步骤1：新建仓库 创建一个Github仓库(repository) ，自已仓库名必须是注册的账号名username + .github + .io。（username就是你前面的owner）这样我们访问博客的时候就可以直接以https://useranme.github.io/进行访问。 步骤2：安装环境和框架 安装node环境：在nodeJs官网（https://nodejs.org/en/ ）下载安装即可。安装完成打开控制台输入：node -v，如果在控制台出现node的版本号就表示安装成功。我的node版本是v9.11.1。 安装git bash。在官网（https://git-scm.com/downloads）下载，并安装。同样安装完毕之后控制台输入：git --version，如果安装成功控制台输出： 为什么要装git呢？因为后面我们本地建的博客最终需要上传到github上供别人浏览的。 node和git安装完成之后，就可以安装Hexo，最流行的博客框架。windows系统下直接打开控制台输入：npm install hexo-cli -g，（node自带npm工作，一个包管理工作），npm有时下载会比较慢，可以用国内的一个镜像cnpm，安装也很简单：npm install -g cnpm --registry=https://registry.npm.taobao.org，或者大家网上搜一下安装教程，很简单。hexo-cli是hexo的脚手架，可以帮助我们快速的建立一个博客框架，并进行本地调试。 步骤3：编写博客，发布到github 新建博客： 打开控制台输入：hexo init username.github.io，它会在控制台当前位置新建一个名为username.github.io文件夹。 更改默认配置（包括主题+配置）： 首先切换到username.github.io：cd username.github.io，然后clone一个hexo中比较流行的主体：git clone https://github.com/iissnan/hexo-theme-next themes/next，不过hexo也有更多的主题供你选择。 hexo的基础配置：打开username.github.io文件夹下的_config.yml文件，进行相应的参数配置（必要的配置，其他的可选，更多配置可参考hexo官网配置）： next主题的配置（next主题配置文件在carreyWang.github.io\themes\next下的_config.yml中），配置参考官网即可，这边我只是简单的改了一下Schemes： 写博客： 在username.github.io/source/_posts下创建自己的第一个博客，例如，创建一个名为First.md的文件，然后基于markdown语法进行文章的书写，这是我的： 本地测试： 在控制台运行hexo s命令，测试服务启动，你可以在浏览器中输入https://localhost:4000 访问了。 安装发布工具并发布： 本地测试没有问题之后，首先安装hexo-deployer-git自动部署发布工具：cnpm install hexo-deployer-git --save，（cnpm是淘宝镜像的命令）记住当前控制台路径是在carreyWang.github.io下。安装完毕之后，就可以发布我们的博客了。顺序执行命令：hexo clean，hexo g，hexo d，这里有的人在执行hexo d命令的时候会出现下图的错误： 解决方法：把_config.yml中的git仓库链接改成了ssh链接，然后再给自己的git账户增加了ssh key。这样以后上传代码也很方便。具体的ssh配置方法网上有很多。 这样问题就解决了，也成功发布了。 仓库设置GitHub Pages： 打开github仓库username.github.io，如果之前的操作都没有问题，此时应该是这样的： 打开仓库的setting，拉到GitHub Pages，设置source为master brance，然后现在一个theme，保存，此时github会有一个成功提示： 大功告成，打开浏览器输入https://username.github.io，见证奇迹的时候到了： 这里只说到了简单的博客创建流程，还有很多很好玩的hexo配置与插件。比如说评论、标签、统计等等。大家可以根据需求自己继续完善。]]></content>
      <categories>
        <category>github</category>
      </categories>
      <tags>
        <tag>建站</tag>
      </tags>
  </entry>
</search>
