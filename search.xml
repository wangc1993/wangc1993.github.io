<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo-NexT配置百度分享</title>
      <link href="/2019/01/10/8/"/>
      <url>/2019/01/10/8/</url>
      
        <content type="html"><![CDATA[<h1 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h1><blockquote><p>将主题配置_config.yml文件中关于baidushare部分的内容改为（其中type亦可以选择button，但是选择button时，死活就是没效果，不知道为什么，知道原因的评论处交流一下）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">baidushare:</span><br><span class="line">  type: slide</span><br><span class="line">  baidushare: true</span><br></pre></td></tr></table></figure></p></blockquote><p><strong>注意：</strong></p><blockquote><p>_config.yml中提示：<strong>Warning: Baidu Share does not support https.</strong>，所以当你部署到https服务器上时，会无效，本地有效。</p></blockquote><h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><blockquote><ol><li>在当前<a href="https://github.com/hrwhisper/baiduShare" target="_blank" rel="noopener">链接</a>下载压缩包到本地，解压后，将static文件夹保存至<strong>themes\next\source</strong>目录下。</li><li>打开文件<strong>themes\next\layout_partials\share\baidushare.swig</strong>，将<strong>//bdimg.share.baidu.com</strong>删除即可。</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo-Next配置系列 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-NexT加入动态背景</title>
      <link href="/2019/01/10/7/"/>
      <url>/2019/01/10/7/</url>
      
        <content type="html"><![CDATA[<h1 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h1><blockquote><p>在<strong>themes\next\source\js\src</strong>中新建文件<strong>dynamic_bg.js</strong>，代码<a href="https://github.com/wangc1993/wangc1993.github.io/tree/master/js/src/dynamic_bg.js" target="_blank" rel="noopener">链接</a>。</p></blockquote><h1 id="添加引入文件"><a href="#添加引入文件" class="headerlink" title="添加引入文件"></a>添加引入文件</h1><blockquote><p>打开<strong>themes\next\layout_layout.swig</strong>文件，在body里添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;bg_content&quot;&gt;</span><br><span class="line">  &lt;canvas id=&quot;canvas&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p></blockquote><p>末尾继续添加代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/dynamic_bg.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h1 id="添加样式"><a href="#添加样式" class="headerlink" title="添加样式"></a>添加样式</h1><blockquote><p>在<strong>themes\next\source\css_custom\custom.styl</strong>文件末尾添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.bg_content &#123;</span><br><span class="line">  position: fixed;</span><br><span class="line">  top: 0;</span><br><span class="line">  z-index: -1;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo-Next配置系列 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-NexT给文章添加结束语</title>
      <link href="/2019/01/10/6/"/>
      <url>/2019/01/10/6/</url>
      
        <content type="html"><![CDATA[<h1 id="新建end-tag"><a href="#新建end-tag" class="headerlink" title="新建end-tag"></a>新建end-tag</h1><blockquote><p>打开<strong>\themes\next\layout_macro</strong>，新建<strong>passage-end-tag.swig</strong>文件，添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-----------------------&lt;span style=&quot;margin: 0 10px;&quot;&gt;本文结束&lt;/span&gt;&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;&lt;span style=&quot;margin: 0 10px;&quot;&gt;感谢您的阅读&lt;/span&gt;-----------------------&lt;/div&gt;</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p></blockquote><h1 id="修改post-swig"><a href="#修改post-swig" class="headerlink" title="修改post.swig"></a>修改post.swig</h1><blockquote><p>打开<strong>\themes\next\layout_macro\post.swig</strong>文件，在<strong>post-body</strong>后，<strong>post-footer</strong>前，添加下面内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p></blockquote><h1 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h1><blockquote><p>在<strong>_config.yml</strong>末尾添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo-Next配置系列 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-NexT接入网页在线联系功能</title>
      <link href="/2019/01/10/5/"/>
      <url>/2019/01/10/5/</url>
      
        <content type="html"><![CDATA[<h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><blockquote><p>首先在<a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>注册个账号，支持github、微信注册，开启DaoVoice之旅，邀请码是1e963cbc，点击创建。</p></blockquote><div align="center"><img src="/2019/01/10/5/1.png"></div><h1 id="修改head-swig"><a href="#修改head-swig" class="headerlink" title="修改head.swig"></a>修改head.swig</h1><blockquote><p>打开<strong>/themes/next/layout/_partials/head.swig</strong>文件，添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&apos;https:&apos; == document.location.protocol ? &apos;https:&apos; : &apos;http:&apos;) + &quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;,&quot;daovoice&quot;)</span><br><span class="line">  daovoice(&apos;init&apos;, &#123;</span><br><span class="line">      app_id: &quot;&#123;&#123;theme.daovoice_app_id&#125;&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">  daovoice(&apos;update&apos;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h1 id="修改next配置文件"><a href="#修改next配置文件" class="headerlink" title="修改next配置文件"></a>修改next配置文件</h1><blockquote><p>首先去daovoice后台找到自己的app_id，正常刚进入的页面就会显示，或者会提示你点击接入，只需点击接入就可看到，然后在_config.yml文件中添加内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Online contact</span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: 1e963cbc  # app_id</span><br></pre></td></tr></table></figure></p></blockquote><h1 id="聊天窗口配置"><a href="#聊天窗口配置" class="headerlink" title="聊天窗口配置"></a>聊天窗口配置</h1><blockquote><p>进入daovoice后台，点击应用设置，点击聊天设置，开始配置，下面是我的配置参数：</p></blockquote><div align="center"><img src="/2019/01/10/5/2.png"></div><blockquote><p><strong>大功告成，欢迎开撩。</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo-Next配置系列 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Next增加网页标题崩溃特效</title>
      <link href="/2019/01/10/4/"/>
      <url>/2019/01/10/4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在<strong>next\source\js\src</strong>文件夹下创建<strong>crash_cheat.js</strong>，添加代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line"> var OriginTitle = document.title;</span><br><span class="line"> var titleTime;</span><br><span class="line"> document.addEventListener(&apos;visibilitychange&apos;, function () &#123;</span><br><span class="line">     if (document.hidden) &#123;</span><br><span class="line">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/img/TEP.ico&quot;);</span><br><span class="line">         document.title = &apos;╭(°A°`)╮ 页面崩溃啦 ~&apos;;</span><br><span class="line">         clearTimeout(titleTime);</span><br><span class="line">     &#125;</span><br><span class="line">     else &#123;</span><br><span class="line">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/favicon.ico&quot;);</span><br><span class="line">         document.title = &apos;(ฅ&gt;ω&lt;*ฅ) 噫又好了~&apos; + OriginTitle;</span><br><span class="line">         titleTime = setTimeout(function () &#123;</span><br><span class="line">             document.title = OriginTitle;</span><br><span class="line">         &#125;, 2000);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>打开<strong>next\layout_layout.swig</strong>，在末尾添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/crash_cheat.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p><strong>提示：</strong><br>如果不想改变icon可以将上面的<code>$(&#39;[rel=&quot;icon&quot;]&#39;).attr</code>语句删除。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo-Next配置系列 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-Next页脚增加统计功能</title>
      <link href="/2019/01/10/3/"/>
      <url>/2019/01/10/3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>如果你使用的主题是NexT，那么你可以很方便的进行不蒜子的访客统计设置，仅仅只需要一步，打开主题的配置文件<strong>/theme/next/_config.yml</strong>，找到如下配置：<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># Show PV/UV of the website/page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: false</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>将enable的值由false改为true，便可以看到页脚出现访问量，上述配置表示：</p><ol><li>site_uv表示是否显示整个网站的UV数</li><li>site_pv表示是否显示整个网站的PV数</li><li>page_pv表示是否显示每个页面的PV数</li></ol></blockquote><blockquote><p>下面是本人的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: 访客数</span><br><span class="line">  site_uv_footer: 人</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: 总访问量</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer: 阅读数</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p><strong>注意：</strong>当我们上面的配置都在正确的时候，运行：<code>hexo s</code>，我们会发现footer下面根本没有数字，打开控制台发现，原来<strong>报错404</strong>。</p></blockquote><blockquote><p><strong>原因分析：</strong><br>由于定位到是不蒜子统计功能突然有问题了，所以前往不蒜子官网进行查看，发现官网有一段很重要的提示：“因七牛强制过期『dn-lbstatics.qbox.me』域名，与客服沟通无果，只能更换域名到『busuanzi.ibruce.info』！”所以定位到问题，原来是不蒜子使用的七牛的域名被强制过期。需要<strong>把 dn-lbstatics.qbox.me 域名更换为 busuanzi.ibruce.info</strong>。</p></blockquote><blockquote><p><strong>解决方案：</strong><br>打开文件<strong>themes\next\layout_third-party\analytics\busuanzi-counter.swig</strong>：将域名dn-lbstatics.qbox.me改为busuanzi.ibruce.info即可。</p></blockquote><blockquote><p>最后，我们再运行：<code>hexo s</code>，footer出现了统计。不过在本地预览效果的时候，uv数和pv数会过大，这是由于不蒜子用户使用一个存储空间，所以使用localhost:4000进行本地预览的时候会导致数字异常，这是正常现象，只需要将博客部署至云端即可恢复正常。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo-Next配置系列 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何使用github发布静态页面</title>
      <link href="/2019/01/07/2/"/>
      <url>/2019/01/07/2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>怎样在github上发布静态页面呢？方法其实很简单，利用gh-pages分支即可实现。下面我将一步步教大家如何操作（首先自己得有一个github账号和git工具）。</p></blockquote><blockquote><ol><li><strong>步骤1：</strong><br> 在需要发布的文件夹对应位置打开命令行： <div align="center"><img src="/2019/01/07/2/1.png"></div></li></ol></blockquote><blockquote><ol start="2"><li><strong>步骤2：</strong><br> 初始化控制仓库：git init，这时文件中会多了一个.git文件： <div align="center"><img src="/2019/01/07/2/2.png"></div><br> <div align="center"><img src="/2019/01/07/2/3.png"></div></li></ol></blockquote><blockquote><ol start="3"><li><strong>步骤3：</strong><br> 将我们需要的文件添加到仓库中：<code>git add --all</code>（全部添加）<br> <div align="center"><img src="/2019/01/07/2/4.png"></div><br> <strong>拓展：</strong>这个警告说明windows里文件的回车换行符和ninux里的不一样。git命令会将换行符统一变成ninux的换行符。</li></ol></blockquote><blockquote><ol start="3"><li><strong>步骤4：</strong><br> 将需要提交的文件commit一下（仅仅提交在本地）： <div align="center"><img src="/2019/01/07/2/5.png"></div></li></ol></blockquote><blockquote><ol start="4"><li><strong>步骤5：</strong><br> 在github上new一个仓库： <div align="center"><img src="/2019/01/07/2/6.png"></div></li></ol></blockquote><blockquote><ol start="5"><li><strong>步骤6：</strong><br> 根据github官网，添加仓库的地址，将本地仓库里的文件push到github上的master（默认分支）中： <div align="center"><img src="/2019/01/07/2/7.png"></div></li></ol></blockquote><blockquote><ol start="6"><li><strong>步骤7：</strong><br> 在远端（remote）创建一个新的分支（branch），固定名gh-pages，本地切换到gh-pages分支，将本地commit提交的东西push到远端的gh-pages分支上： <div align="center"><img src="/2019/01/07/2/8.png"></div><br> <div align="center"><img src="/2019/01/07/2/9.png"></div></li></ol></blockquote><p>这样<a href="https://wangc1993.github.io/wjs/">站点</a>就创建好了。</p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何快速搭建免费个人博客</title>
      <link href="/2019/01/04/1/"/>
      <url>/2019/01/04/1/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>前提准备：</strong>我们的博客网站是基于github，所以我们需要一个github账号，账号名很重要（当时很后悔）。</p></blockquote><h1 id="步骤1：新建仓库"><a href="#步骤1：新建仓库" class="headerlink" title="步骤1：新建仓库"></a>步骤1：新建仓库</h1><blockquote><p>创建一个Github仓库(repository) ，自已仓库名必须是注册的账号名username + .github + .io。<strong>（username就是你前面的owner）</strong>这样我们访问博客的时候就可以直接以<a href="https://useranme.github.io/进行访问。" target="_blank" rel="noopener">https://useranme.github.io/进行访问。</a><br><img src="/2019/01/04/1/1.png" width="100%" height="500px"></p></blockquote><h1 id="步骤2：安装环境和框架"><a href="#步骤2：安装环境和框架" class="headerlink" title="步骤2：安装环境和框架"></a>步骤2：安装环境和框架</h1><blockquote><ol><li><p>安装node环境：在nodeJs官网（<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a> ）下载安装即可。安装完成打开控制台输入：<code>node -v</code>，如果在控制台出现node的版本号就表示安装成功。我的node版本是v9.11.1。</p> <div align="center"><img src="/2019/01/04/1/2.png"></div></li><li><p>安装git bash。在官网（<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a>）下载，并安装。同样安装完毕之后控制台输入：<code>git --version</code>，如果安装成功控制台输出：<br> <div align="center"><img src="/2019/01/04/1/3.png"></div><br> 为什么要装git呢？因为后面我们本地建的博客最终需要上传到github上供别人浏览的。</p></li><li><p>node和git安装完成之后，就可以安装<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo</a>，最流行的博客框架。windows系统下直接打开控制台输入：<code>npm install hexo-cli -g</code>，（node自带npm工作，一个包管理工作），npm有时下载会比较慢，可以用国内的一个镜像cnpm，安装也很简单：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>，或者大家网上搜一下安装教程，很简单。hexo-cli是hexo的脚手架，可以帮助我们快速的建立一个博客框架，并进行本地调试。</p></li></ol></blockquote><h1 id="步骤3：编写博客，发布到github"><a href="#步骤3：编写博客，发布到github" class="headerlink" title="步骤3：编写博客，发布到github"></a>步骤3：编写博客，发布到github</h1><blockquote><ol><li>新建博客：<br> 打开控制台输入：<code>hexo init username.github.io</code>，它会在控制台当前位置新建一个名为username.github.io文件夹。 <div align="center"><img src="/2019/01/04/1/4.png"></div></li><li>更改默认配置（包括主题+配置）：<br> 首先切换到username.github.io：<code>cd username.github.io</code>，然后clone一个hexo中比较流行的主体：<code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code>，不过hexo也有更多的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>供你选择。<br> hexo的基础配置：打开username.github.io文件夹下的_config.yml文件，进行相应的参数配置（必要的配置，其他的可选，更多配置可参考hexo<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">官网配置</a>）： <div align="center"><img src="/2019/01/04/1/5.png"></div><br> <div align="center"><img src="/2019/01/04/1/6.png"></div><br> next主题的配置（next主题配置文件在carreyWang.github.io\themes\next下的_config.yml中），配置参考<a href="http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="noopener">官网</a>即可，这边我只是简单的改了一下Schemes：<br> <div align="center"><img src="/2019/01/04/1/7.png"></div></li><li>写博客：<br> 在username.github.io/source/_posts下创建自己的第一个博客，例如，创建一个名为First.md的文件，然后基于markdown语法进行文章的书写，这是我的： <div align="center"><img src="/2019/01/04/1/8.png"></div></li><li>本地测试：<br> 在控制台运行<code>hexo s</code>命令，测试服务启动，你可以在浏览器中输入<a href="https://localhost:4000" target="_blank" rel="noopener">https://localhost:4000</a> 访问了。</li><li>安装发布工具并发布：<br> 本地测试没有问题之后，首先安装<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>自动部署发布工具：<code>cnpm install hexo-deployer-git --save</code>，（cnpm是淘宝镜像的命令）记住当前控制台路径是在carreyWang.github.io下。安装完毕之后，就可以发布我们的博客了。顺序执行命令：<code>hexo clean</code>，<code>hexo g</code>，<code>hexo d</code>，这里有的人在执行<code>hexo d</code>命令的时候会出现下图的错误：<br> <div align="center"><img src="/2019/01/04/1/9.png"></div><br> 解决方法：把_config.yml中的git仓库链接改成了ssh链接，然后再给自己的git账户增加了ssh key。这样以后上传代码也很方便。具体的ssh<a href="https://blog.csdn.net/gulingfengze/article/details/69665223" target="_blank" rel="noopener">配置方法</a>网上有很多。<br> 这样问题就解决了，也成功发布了。</li><li>仓库设置GitHub Pages：<br> 打开github仓库username.github.io，如果之前的操作都没有问题，此时应该是这样的：<br> <div align="center"><img src="/2019/01/04/1/10.png"></div><br> 打开仓库的setting，拉到GitHub Pages，设置source为master brance，然后现在一个theme，保存，此时github会有一个成功提示：<br> <div align="center"><img src="/2019/01/04/1/11.png"></div><br><strong>大功告成，打开浏览器输入</strong><a href="https://wangc1993.github.io/">https://username.github.io</a>，见证奇迹的时候到了：</li></ol></blockquote><p><div align="center"><img src="/2019/01/04/1/12.png"></div><br>这里只说到了简单的博客创建流程，还有很多很好玩的hexo<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">配置</a>与<a href="https://hexo.io/plugins/" target="_blank" rel="noopener">插件</a>。比如说评论、标签、统计等等。大家可以根据需求自己继续完善。</p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
