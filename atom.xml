<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>carreyWang的博客空间</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-09T08:15:23.704Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Carrey Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何使用github发布静态页面</title>
    <link href="http://yoursite.com/2019/01/07/2/"/>
    <id>http://yoursite.com/2019/01/07/2/</id>
    <published>2019-01-07T11:50:57.170Z</published>
    <updated>2019-01-09T08:15:23.704Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>怎样在github上发布静态页面呢？方法其实很简单，利用gh-pages分支即可实现。下面我将一步步教大家如何操作（首先自己得有一个github账号和git工具）。</p></blockquote><blockquote><ol><li><strong>步骤1：</strong><br> 在需要发布的文件夹对应位置打开命令行： <div align="center"><img src="/2019/01/07/2/1.png"></div></li></ol></blockquote><blockquote><ol start="2"><li><strong>步骤2：</strong><br> 初始化控制仓库：git init，这时文件中会多了一个.git文件： <div align="center"><img src="/2019/01/07/2/2.png"></div><br> <div align="center"><img src="/2019/01/07/2/3.png"></div></li></ol></blockquote><blockquote><ol start="3"><li><strong>步骤3：</strong><br> 将我们需要的文件添加到仓库中：<code>git add --all</code>（全部添加）<br> <div align="center"><img src="/2019/01/07/2/4.png"></div><br> <strong>拓展：</strong>这个警告说明windows里文件的回车换行符和ninux里的不一样。git命令会将换行符统一变成ninux的换行符。</li></ol></blockquote><blockquote><ol start="3"><li><strong>步骤4：</strong><br> 将需要提交的文件commit一下（仅仅提交在本地）： <div align="center"><img src="/2019/01/07/2/5.png"></div></li></ol></blockquote><blockquote><ol start="4"><li><strong>步骤5：</strong><br> 在github上new一个仓库： <div align="center"><img src="/2019/01/07/2/6.png"></div></li></ol></blockquote><blockquote><ol start="5"><li><strong>步骤6：</strong><br> 根据github官网，添加仓库的地址，将本地仓库里的文件push到github上的master（默认分支）中： <div align="center"><img src="/2019/01/07/2/7.png"></div></li></ol></blockquote><blockquote><ol start="6"><li><strong>步骤7：</strong><br> 在远端（remote）创建一个新的分支（branch），固定名gh-pages，本地切换到gh-pages分支，将本地commit提交的东西push到远端的gh-pages分支上： <div align="center"><img src="/2019/01/07/2/8.png"></div><br> <div align="center"><img src="/2019/01/07/2/9.png"></div></li></ol></blockquote><p>这样<a href="https://wangc1993.github.io/wjs/" target="_blank" rel="noopener">站点</a>就创建好了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;怎样在github上发布静态页面呢？方法其实很简单，利用gh-pages分支即可实现。下面我将一步步教大家如何操作（首先自己得有一个github账号和git工具）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;
      
    
    </summary>
    
      <category term="github" scheme="http://yoursite.com/categories/github/"/>
    
    
  </entry>
  
  <entry>
    <title>如何快速搭建免费个人博客</title>
    <link href="http://yoursite.com/2019/01/04/1/"/>
    <id>http://yoursite.com/2019/01/04/1/</id>
    <published>2019-01-04T13:08:31.633Z</published>
    <updated>2019-01-09T08:27:48.407Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>前提准备：</strong>我们的博客网站是基于github，所以我们需要一个github账号，账号名很重要（当时很后悔）。</p><p><strong>步骤1：</strong>创建一个Github仓库(repository) ，自已仓库名必须是注册的账号名username + .github + .io。<strong>（username就是你前面的owner）</strong>这样我们访问博客的时候就可以直接以<a href="https://useranme.github.io/进行访问。" target="_blank" rel="noopener">https://useranme.github.io/进行访问。</a><br><img src="/2019/01/04/1/1.png" width="100%" height="500px"><br><strong>步骤2：</strong>安装环境和框架</p><ol><li><p>安装node环境：在nodeJs官网（<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a> ）下载安装即可。安装完成打开控制台输入：<code>node -v</code>，如果在控制台出现node的版本号就表示安装成功。我的node版本是v9.11.1。</p> <div align="center"><img src="/2019/01/04/1/2.png"></div></li><li><p>安装git bash。在官网（<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a>）下载，并安装。同样安装完毕之后控制台输入：<code>git --version</code>，如果安装成功控制台输出：<br> <div align="center"><img src="/2019/01/04/1/3.png"></div><br> 为什么要装git呢？因为后面我们本地建的博客最终需要上传到github上供别人浏览的。</p></li><li><p>node和git安装完成之后，就可以安装<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo</a>，最流行的博客框架。windows系统下直接打开控制台输入：<code>npm install hexo-cli -g</code>，（node自带npm工作，一个包管理工作），npm有时下载会比较慢，可以用国内的一个镜像cnpm，安装也很简单：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>，或者大家网上搜一下安装教程，很简单。hexo-cli是hexo的脚手架，可以帮助我们快速的建立一个博客框架，并进行本地调试。</p></li></ol><p><strong>步骤3：</strong> 编写博客，发布到github</p><ol><li>新建博客：<br> 打开控制台输入：<code>hexo init username.github.io</code>，它会在控制台当前位置新建一个名为username.github.io文件夹。 <div align="center"><img src="/2019/01/04/1/4.png"></div></li><li>更改默认配置（包括主题+配置）：<br> 首先切换到username.github.io：<code>cd username.github.io</code>，然后clone一个hexo中比较流行的主体：<code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code>，不过hexo也有更多的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>供你选择。<br> hexo的基础配置：打开username.github.io文件夹下的_config.yml文件，进行相应的参数配置（必要的配置，其他的可选，更多配置可参考hexo<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">官网配置</a>）： <div align="center"><img src="/2019/01/04/1/5.png"></div><br> <div align="center"><img src="/2019/01/04/1/6.png"></div><br> next主题的配置（next主题配置文件在carreyWang.github.io\themes\next下的_config.yml中），配置参考<a href="http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="noopener">官网</a>即可，这边我只是简单的改了一下Schemes：<br> <div align="center"><img src="/2019/01/04/1/7.png"></div></li><li>写博客：<br> 在username.github.io/source/_posts下创建自己的第一个博客，例如，创建一个名为First.md的文件，然后基于markdown语法进行文章的书写，这是我的： <div align="center"><img src="/2019/01/04/1/8.png"></div></li><li>本地测试：<br> 在控制台运行<code>hexo s</code>命令，测试服务启动，你可以在浏览器中输入<a href="https://localhost:4000" target="_blank" rel="noopener">https://localhost:4000</a> 访问了。</li><li>安装发布工具并发布：<br> 本地测试没有问题之后，首先安装<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>自动部署发布工具：<code>cnpm install hexo-deployer-git --save</code>，（cnpm是淘宝镜像的命令）记住当前控制台路径是在carreyWang.github.io下。安装完毕之后，就可以发布我们的博客了。顺序执行命令：<code>hexo clean</code>，<code>hexo g</code>，<code>hexo d</code>，这里有的人在执行<code>hexo d</code>命令的时候会出现下图的错误：<br> <div align="center"><img src="/2019/01/04/1/9.png"></div><br> 解决方法：把_config.yml中的git仓库链接改成了ssh链接，然后再给自己的git账户增加了ssh key。这样以后上传代码也很方便。具体的ssh<a href="https://blog.csdn.net/gulingfengze/article/details/69665223" target="_blank" rel="noopener">配置方法</a>网上有很多。<br> 这样问题就解决了，也成功发布了。</li><li>仓库设置GitHub Pages：<br> 打开github仓库username.github.io，如果之前的操作都没有问题，此时应该是这样的：<br> <div align="center"><img src="/2019/01/04/1/10.png"></div><br> 打开仓库的setting，拉到GitHub Pages，设置source为master brance，然后现在一个theme，保存，此时github会有一个成功提示：<br> <div align="center"><img src="/2019/01/04/1/11.png"></div><br><strong>大功告成，打开浏览器输入</strong><a href="https://wangc1993.github.io/" target="_blank" rel="noopener">https://username.github.io</a>，见证奇迹的时候到了：</li></ol></blockquote><p><div align="center"><img src="/2019/01/04/1/12.png"></div><br>这里只说到了简单的博客创建流程，还有很多很好玩的hexo<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener">配置</a>与<a href="https://hexo.io/plugins/" target="_blank" rel="noopener">插件</a>。比如说评论、标签、统计等等。大家可以根据需求自己继续完善。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;前提准备：&lt;/strong&gt;我们的博客网站是基于github，所以我们需要一个github账号，账号名很重要（当时很后悔）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;步骤1：&lt;/strong&gt;创建一个Github仓库(repository) 
      
    
    </summary>
    
      <category term="github" scheme="http://yoursite.com/categories/github/"/>
    
    
      <category term="建站" scheme="http://yoursite.com/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
</feed>
